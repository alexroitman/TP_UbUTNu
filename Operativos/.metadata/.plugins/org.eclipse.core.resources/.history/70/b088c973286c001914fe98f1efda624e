/*
 * comunicacion.h
 *
 *  Created on: 1 may. 2019
 *      Author: utnso
 */

#ifndef SOCK_COMUNICACION_H_
#define SOCK_COMUNICACION_H_
#define MAX_BUFFER 1024

#define INSERT 1
#define SELECT 2
#define CREATE 3
#define DESCRIBE 4
#define DROP 5
#define JOURNAL 6
#define ADD 7

typedef struct{

	char* header;
	char* query;
			// NOTA: Es calculable. Aca lo tenemos por fines didacticos!
} t_Package_Request;


typedef struct{

	char* message;
	uint32_t message_long;
	uint32_t total_size;			// NOTA: Es calculable. Aca lo tenemos por fines didacticos!
} t_Package_Response;

typedef struct{
	int8_t type;
	int16_t length;
	char payload[MAX_BUFFER];
}tPaquete;


typedef struct{
	char* nombre_tabla;
	int key;
	char* value;
}tInsert;

typedef struct{
	char* nombre_tabla;
	int key;
}tSelect;

typedef struct{
	char* nombre_tabla;
	int consistencia;
	int particiones;
	int compaction_time;
}tCreate;

typedef struct{
	char* nombre_tabla;
}tDescribe;

typedef struct{
	char* nombre_tabla;
}tDrop;

typedef struct{
												//QUE CARAJO PONGO ACA JOURNAL
}tJournal;

typedef struct{
	int memory;
	int numero;
	int criterio;
}tAdd;

int serializarRequest(t_Package_Request packageRequest, tPaquete* paqueteSerializado);
int desSerializarRequest(tPaquete paqueteSerializado, t_Package_Request* packageRequest);




#endif /* SOCK_COMUNICACION_H_ */
